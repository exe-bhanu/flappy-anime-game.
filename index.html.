<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Anime Flappy Bird</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    body {
      overflow: hidden;
      background: black;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    #background-video {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      object-fit: cover;
      z-index: -1;
    }
    canvas {
      display: block;
      margin: auto;
      background: transparent;
      position: relative;
      z-index: 1;
    }
  </style>
</head>
<body>
  <video id="background-video" autoplay muted loop>
    <source src="https://cdn.pixabay.com/video/2023/05/17/168316-829694364_large.mp4" type="video/mp4">
    Your browser does not support the video tag.
  </video>

  <canvas id="gameCanvas" width="400" height="600"></canvas>

  <audio id="bgMusic" autoplay loop>
    <source src="https://cdn.pixabay.com/audio/2022/03/15/audio_0f882bce6e.mp3" type="audio/mpeg">
  </audio>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    let frames = 0;
    const DEGREE = Math.PI / 180;

    const sprite = new Image();
    sprite.src = 'https://i.imgur.com/L3kDphx.png';

    const bird = {
      x: 50,
      y: 150,
      w: 34,
      h: 26,
      frame: 0,
      gravity: 0.25,
      jump: 4.6,
      speed: 0,
      rotation: 0,

      draw() {
        ctx.save();
        ctx.translate(this.x, this.y);
        ctx.rotate(this.rotation);
        ctx.drawImage(sprite, this.frame * this.w, 0, this.w, this.h, -this.w/2, -this.h/2, this.w, this.h);
        ctx.restore();
      },

      flap() {
        this.speed = -this.jump;
      },

      update() {
        this.speed += this.gravity;
        this.y += this.speed;

        if (this.y + this.h >= canvas.height) {
          this.y = canvas.height - this.h;
          this.speed = 0;
        }

        this.rotation = this.speed < 0 ? -25 * DEGREE : 70 * DEGREE;
      }
    };

    const pipes = [];
    const pipeWidth = 50;
    const gap = 120;
    let pipeTimer = 0;

    function spawnPipe() {
      const topHeight = Math.floor(Math.random() * 200) + 50;
      pipes.push({ x: canvas.width, topHeight });
    }

    function drawPipes() {
      ctx.fillStyle = '#6fb98f';
      pipes.forEach(p => {
        ctx.fillRect(p.x, 0, pipeWidth, p.topHeight);
        ctx.fillRect(p.x, p.topHeight + gap, pipeWidth, canvas.height);
      });
    }

    function updatePipes() {
      pipeTimer++;
      if (pipeTimer % 90 === 0) spawnPipe();

      pipes.forEach(p => p.x -= 2);

      pipes.filter(p => p.x + pipeWidth > 0);
    }

    function gameLoop() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      bird.update();
      bird.draw();

      updatePipes();
      drawPipes();

      frames++;
      requestAnimationFrame(gameLoop);
    }

    document.addEventListener('keydown', e => {
      if (e.code === 'Space') bird.flap();
    });

    document.addEventListener('click', () => bird.flap());

    gameLoop();
  </script>
</body>
</html>
